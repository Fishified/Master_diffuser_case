#!/bin/sh
cd ${0%/*} || exit 1 #Run from this directory

#Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions


if [ "$1" = "mesh" ]; then
	rm -r pro*
	rm -r 0 
	foamJob -screen -append foamCleanPolyMesh
	foamJob -screen -append blockMesh

	foamJob -screen -append decomposePar 
	foamJob -screen -append mpirun -np 4 snappyHexMesh -overwrite -parallel
	foamJob -screen -append reconstructParMesh -constant
	
	rm -r pro*
	rm -r ./constant/polyMesh/Sets
	foamJob -screen -append setSet -batch ./system/setSet.diffuser
	foamJob -screen -append createPatch -overwrite -dict ./system/createPatchDict.diffuser
fi


if [ "$1" = "meshRun" ]; then
	rm -r pro*
	rm -r 0 
	foamJob -screen -append foamCleanPolyMesh
	foamJob -screen -append blockMesh
	foamJob -screen -append decomposePar
	foamJob -screen -append mpirun -np 4 snappyHexMesh -overwrite -parallel
	foamJob -screen -append reconstructParMesh -constant
	rm -r pro*
	rm -r ./constant/polyMesh/Sets
	foamJob -screen -append setSet -batch ./system/setSet.diffuser
	foamJob -screen -append createPatch -overwrite -dict ./system/createPatchDict.diffuser
	
	cp -r zero 0
	foamJob -screen -append setFields
	foamJob -screen -append decomposePar
	foamJob -screen -append mpirun -np 4 twoPhaseEulerFoam -parallel
fi


if [ "$1" = "run" ]; then
	cp -r zero 0
	foamJob -screen -append setFields
	foamJob -screen -append decomposePar
	foamJob -screen -append mpirun -np 4 twoPhaseEulerFoam -parallel
fi



